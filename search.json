[{"categories":["Résumé","Professional"],"content":"Raoul-Aimé Kengne Technology Architect \u0026 Automation Architect (IaC)\nLocation: Quebec, Canada\nExperience: ~15 years\nProfessional Summary Experienced Technology Architect with expertise in infrastructure, automation, and cloud solutions. Skilled in Ansible, Azure, AWS, and multi-cloud environments. Dedicated to delivering efficient, scalable, and reliable IT solutions for organizations across various industries. Known for an empathetic approach and effective collaboration, even in challenging circumstances.\nKey Skills Infrastructure as Code (IaC): Proficient in Ansible, Terraform, and cloud automation. Cloud Solutions: Expertise in Azure, AWS, and hybrid cloud architectures. Operating Systems: Deep knowledge of Linux (RHEL, Ubuntu) and Windows Server ecosystems. System Design: Skilled in designing scalable, secure, and fault-tolerant architectures. Scripting \u0026 Automation: Strong experience in Bash, PowerShell, and Python. Collaboration \u0026 Leadership: Effective in leading teams and fostering partnerships. Certifications: AWS Solutions Architect Professional Azure Solutions Architect Expert Professional Experience Technology Architect \u0026 Consultant Major IT Company, Quebec\n2008 - Present\nDesigned and implemented multi-cloud architectures for enterprise clients, focusing on scalability and cost efficiency. Led automation initiatives, including creating custom Ansible modules and roles for complex environments. Managed critical projects integrating Azure AD, Windows Server, and Red Hat Ansible Automation Platform. Delivered training sessions on automation and infrastructure design to client teams. Education Bachelor of Engineering in Computer Science\nUniversité Laval, Quebec\nCertifications AWS Solutions Architect Professional Azure Solutions Architect Expert ITIL Foundation Certification Notable Projects Ansible Automation Platform Integration:\nDesigned and deployed Ansible Automation Platform in Azure Red Hat OpenShift, integrating SAML for secure authentication.\nCloud-Native Infrastructure Setup:\nBuilt and optimized Terraform modules for Linux and Windows VM deployment in Azure with custom templates and automation.\nPatch Management Reporting System:\nDeveloped an Ansible role to generate HTML reports summarizing patch status across Linux and Windows environments.\nPersonal Goals Aspiring to specialize further in IaC and explore opportunities in independent consulting to support businesses in Quebec and across Canada.\nFor more details or collaboration opportunities, feel free to reach out via the contact form on this blog.\n","description":"","tags":["Technology","Architect","Automation","Architect","Consultant"],"title":"About me","uri":"raoulaime.github.io/about/"},{"categories":["Automation","DevOps"],"content":"Getting Started with Red Hat Ansible Automation Platform The Red Hat Ansible Automation Platform (AAP) is a comprehensive solution for automating IT processes, enhancing efficiency, and simplifying complex workflows. In this post, we’ll dive into the platform’s key features, explore its components, and provide a step-by-step guide to start your automation journey.\nWhat is Red Hat Ansible Automation Platform? The Ansible Automation Platform is an enterprise-grade solution that extends the power of open-source Ansible with features like role-based access control, automation analytics, and scalable execution environments. It’s designed to automate repetitive tasks, from configuration management to application deployment.\nKey Features of Ansible Automation Platform Centralized Automation Control: Manage and execute playbooks from a single control plane. Role-Based Access Control (RBAC): Assign permissions to teams and users based on their responsibilities. Automation Analytics: Gain insights into automation performance and identify optimization opportunities. Certified Content Collections: Access pre-built automation content verified by Red Hat. Execution Environments: Run automation in isolated, containerized environments. Use Cases for Ansible Automation Platform Infrastructure as Code (IaC): Automate provisioning and configuration of servers and cloud resources. Application Deployment: Simplify the deployment of applications in hybrid or multi-cloud environments. Network Automation: Configure and manage network devices with playbooks. Security and Compliance: Ensure systems meet security standards by automating compliance checks and remediations. Setting Up Ansible Automation Platform Prerequisites Subscription to Red Hat Ansible Automation Platform. Access to Red Hat Customer Portal for downloading required packages. Familiarity with Ansible playbooks and YAML syntax. Step 1: Install Ansible Automation Controller The Automation Controller provides a graphical user interface (GUI) and API for managing Ansible playbooks. Follow these steps:\nDownload the installer: 1 subscription-manager repos --enable ansible-automation-platform-2.4-for-rhel-8-x86_64-rpms Install the Automation Controller: 1 sudo yum install ansible-automation-platform-controller Step 2: Configure Automation Controller Access the web interface using your browser. Create an organization and configure your inventory. Upload your playbooks or use certified content collections. Step 3: Connect to Execution Environments Create isolated environments for executing playbooks:\nBuild or pull execution environment images using Podman: 1 podman pull registry.redhat.io/ansible-automation-platform-20-ee-supported Register the environment in the Automation Controller. Example Use Case: Automated Patching With the Ansible Automation Platform, you can automate patching workflows. Here’s how:\nDefine the Inventory: List your servers that require patching. Create a Playbook: 1 2 3 4 5 6 7 8 --- - name: Apply patches to servers hosts: all tasks: - name: Update all packages ansible.builtin.yum: name: \"*\" state: latest Schedule Jobs: Use the Automation Controller to schedule patching during maintenance windows. Conclusion The Red Hat Ansible Automation Platform is a powerful tool for managing IT operations, reducing manual tasks, and achieving operational excellence. Whether you’re managing a hybrid cloud, scaling automation across teams, or ensuring compliance, AAP provides the tools to streamline and optimize your workflows.\nReferences Red Hat Ansible Automation Platform Documentation Ansible Collections Red Hat Customer Portal Written by Your Name\n","description":"An introduction to the Red Hat Ansible Automation Platform, its features, and how to get started.","tags":["ansible","automation","red hat","devops"],"title":"Getting Started with Red Hat Ansible Automation Platform","uri":"raoulaime.github.io/red-hat-ansible-automation-platform/"},{"categories":["Automation","DevOps"],"content":"How to Start with Event-Driven Ansible Event-Driven Ansible (EDA) introduces a powerful approach to automation by reacting to real-time events. In this post, we’ll explore what EDA is, how it works, and provide a step-by-step guide to setting up your first EDA environment.\nWhat is Event-Driven Ansible? Event-Driven Ansible allows you to automate tasks based on triggers from various event sources, such as webhooks, monitoring tools, or metrics from systems like Prometheus. This enables dynamic, real-time responses to changing infrastructure conditions.\nWhy Use Event-Driven Ansible? Proactive Automation: Instead of reactive tasks, anticipate and address issues automatically. Real-Time Monitoring: Integrate with tools like ServiceNow, Kafka, or custom webhooks. Efficiency: Reduce manual intervention with dynamic playbooks and remediations. Setting Up Event-Driven Ansible Prerequisites Ansible Automation Controller installed. Access to an event source (e.g., Kafka, ServiceNow, or a webhook endpoint). Familiarity with playbooks and YAML syntax. Step 1: Install EDA To install the Event-Driven Ansible Collection:\n1 ansible-galaxy collection install ansible.eda Step 2: Create a Rulebook Define your automation triggers in a rulebook:\n1 2 3 4 5 6 7 8 9 10 11 12 13 --- - name: Monitor Service Health hosts: localhost sources: - ansible.eda.webhook: host: 0.0.0.0 port: 5000 rules: - name: Restart a service on failure condition: event['service_status'] == 'failed' action: run_playbook: name: restart_service.yml Step 3: Test the Rulebook Start the EDA engine to process events:\n1 ansible-rulebook --rulebook rulebook.yml --inventory inventory.yml Real-World Use Case: Auto-Healing Infrastructure Imagine you’re managing a Kubernetes cluster, and a pod fails. Using Event-Driven Ansible, you can:\nDetect the failure via Prometheus. Trigger a webhook to Ansible Automation Controller. Execute a remediation playbook to restart the pod or redeploy resources. Conclusion Event-Driven Ansible brings agility and scalability to automation workflows. Whether you’re managing cloud infrastructure, on-premise servers, or hybrid environments, EDA helps you stay ahead of the curve.\nReferences Ansible Documentation Event-Driven Ansible Overview Written by Your Name\n","description":"Learn how to use Event-Driven Ansible to automate infrastructure management based on real-time events.","tags":["ansible","event-driven","automation","devops"],"title":"How to Start with Event-Driven Ansible","uri":"raoulaime.github.io/event-driven-ansible/"},{"categories":null,"content":"Welcome to My Website Welcome to my corner of the internet! Here, you’ll find:\nBlog Posts: Insights, tutorials, and thought pieces on various topics. Projects: A showcase of my professional and personal projects. About Me: Learn more about who I am and what I do. Featured Posts Latest Projects Check out some of my recent work:\nProject One Project Two Project Three Connect With Me Feel free to reach out or follow me:\nEmail: raoulaimek@gmail.com LinkedIn: linkedin.com/in/raoulaime GitHub: github.com/raoulaime ","description":"Explore insights, projects, and more.","tags":null,"title":"Welcome to My Site","uri":"raoulaime.github.io/home/"},{"categories":null,"content":"","description":"","tags":null,"title":"Raoul’s blog","uri":"raoulaime.github.io/contact/"}]
